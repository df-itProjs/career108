---

---

<form id="enquiryForm" class="enquiry-form">
  <h2 class="title">Enquiry Form!</h2>

  <div class="auto-columns">
    <div class="form-control">
      <label for="name">Name</label>
      <input type="text" id="name" name="name" required />
    </div>

    <div class="form-control">
      <label for="email">Email</label>
      <input type="email" id="email" name="email" required />
    </div>
  </div>

  <div class="auto-columns">
    <div class="form-control">
      <label for="mobile">Mobile Number</label>
      <input
        type="tel"
        id="mobile"
        name="mobile"
        pattern="[0-9]{10}"
        required
      />
    </div>

    <div class="form-control">
      <label for=""></label>
      <button
        type="button"
        id="getOtpButton"
        style="
        background-color: var(--clr-accent);
        border: 2px solid var(--clr-accent);
        border-radius: 5px;
        font: inherit;
        font-weight: 600;
        cursor: pointer;
        transition: background-color 0.3s ease, color 0.3s ease;
      "
      >
        Get OTP
      </button>
    </div>
  </div>

  <div class="form-control">
    <label for="otp">OTP</label>
    <input type="text" id="otp" name="otp" pattern="[0-9]{6}" required />
  </div>

  <div class="auto-columns">
    <div class="form-control">
      <label for="state">State</label>
      <select name="state" id="state" required>
        <option value="">Select an Option</option>
        <option value="1">Gujarat</option>
        <option value="2">Maharashtra</option>
      </select>
    </div>

    <div class="form-control">
      <label for="city">City</label>

      <select name="city" id="city" required>
        <option value="">Select an Option</option>
        <option value="1">Rajkot</option>
        <option value="2">Ahmedabad</option>
      </select>
    </div>
  </div>

  <div class="auto-columns">
    <div class="form-control">
      <label for="standard">Standard</label>

      <select name="standard" id="standard" required>
        <option value="">Select an Option</option>
        <option value="0">10th</option>
        <option value="1">12th Arts</option>
        <option value="2">12th Commerce</option>
        <option value="3">12th Science A</option>
        <option value="4">12th Science B</option>
      </select>
    </div>

    <div class="form-control">
      <label for="course">Course</label>
      <select name="course" id="course" required>
        <option value="">Select an Option</option>
        <option value="1">B.Voc</option>
      </select>
    </div>
  </div>

  <label>
    <input
      type="checkbox"
      name="terms-and-conditions"
      id="terms-and-conditions"
      required
    />

    I agree to give my consent to receive updates through SMS/Email & WhatsApp*.
  </label>

  <button type="submit">Submit</button>
</form>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const form = document.querySelector("#enquiryForm") as HTMLFormElement | null;

    if (!form) {
      console.error("Form not found!");
      return;
    }

    const getOtpButton = document.querySelector("#getOtpButton");
    const mobileInput = document.querySelector("#mobile") as HTMLInputElement | null;
    let verificationKey: string | null = null;

    const SEND_OTP_API = "https://dev-api.skill.college/career108/send-otp";
    const GENERATE_LEAD_API = "https://dev-api.skill.college/career108/generate-lead";

    if (getOtpButton && mobileInput) {
      getOtpButton.addEventListener("click", async () => {
        const phoneNumber = mobileInput.value;
        const phoneRegex = /^[0-9]{10}$/;
        if (!phoneRegex.test(phoneNumber)) {
          alert("Please enter a valid 10-digit mobile number.");
          return;
        }
        try {
          const response = await fetch(`${SEND_OTP_API}/${phoneNumber}`, {
            method: "GET",
            headers: {
              "Content-Type": "application/json",
            },
          });
          if (response.ok) {
            const result = await response.json();
            verificationKey = result.verificationKey;
          } else {
            alert("Failed to send OTP. Please try again.");
            console.error("API Error:", response.status, response.statusText);
          }
        } catch (error) {
          alert("An error occurred while sending OTP.");
          console.error("Error:", error);
        }
      });
    }

    form.addEventListener("submit", async (event) => {
      event.preventDefault();

      if (!verificationKey) {
        alert("Please generate OTP first.");
        return;
      }

      try {
        const formData = new FormData(form);
        const data = Object.fromEntries(formData.entries());

        data["otp_verification_key"] = verificationKey;
        data["source"] = getQueryParam("source") || "unknown";

        const response = await fetch(GENERATE_LEAD_API, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(data),
        });

        if (response.ok) {
          const result = await response.json();
        } else {
          const errorResponse = await response.json();
          console.error("Failed to generate lead:", errorResponse);
          alert(
            `Failed to submit form: ${errorResponse.detail || "Unknown Error"}`
          );
        }
      } catch (error) {
        console.error("Error retrieving form data:", error);
        alert("An error occurred while submitting the form.");
      }

      const pdfURL = "/Career.pdf#page=2";
      window.open(pdfURL);
    });
  });

  function getQueryParam(param: string): string | null {
    const urlParams = new URLSearchParams(window.location.search);
    return urlParams.get(param);
  }
</script>


<style>
  .enquiry-form {
    padding: 2rem;
    padding-block-start: 1.5rem;
    background-color: rgba(from var(--clr-neutral) r g b / 0.1);
    border-radius: 1rem;
    border: 2px solid var(--clr-accent);

    display: grid;
    gap: 1rem;

    .title {
      font-size: 2rem;
      text-align: center;
      color: var(--clr-accent);
    }

    button[type="submit"] {
      background-color: var(--clr-accent);
      padding: 0.7em 1em;
      border: 2px solid var(--clr-accent);
      border-radius: 5px;
      font: inherit;
      font-weight: 600;
      cursor: pointer;
      transition:
        background-color 0.3s ease,
        color 0.3s ease;

      &:hover,
      &:focus-visible {
        background-color: var(--clr-accent-dark);
        color: var(--clr-neutral);
      }
    }
  }

  .form-control {
    display: grid;
    gap: 0.5em;

    label:has(+ :required) {
      &::after {
        content: " *";
        color: var(--clr-accent);
      }
    }

    input,
    select {
      font: inherit;
      background-color: var(--clr-neutral);
      color: var(--clr-primary);
      border: 1px solid var(--clr-accent);
      border-radius: 5px;
      padding: 0.5em;

      &:user-invalid {
        background-color: color-mix(in oklab, red 70%, var(--clr-neutral) 100%);
      }
    }
  }

  .auto-columns {
    display: grid;
    grid-auto-flow: column;
    grid-auto-columns: 1fr;
    gap: 1rem;
  }
</style>
